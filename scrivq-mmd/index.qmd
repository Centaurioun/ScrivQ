# ScrivQ {#sec-scriv1}


[]{#scriv1}

The **ScrivQ** template, by Bernardo Vasconcelos (see [this thread](forum.literatureandlatte.com/t/134755)), programs the **Scrivener** writing environment for publishing **Quarto** Books (PDF, DOCX and HTML) using zero configuration and one-click compilation. The template descends from Ian's excellent [Quarto template for Scrivener](forum.literatureandlatte.com/t/scrivener-quarto-a-technical-academic-publishing-workflow/129769), and uses the original ruby script to perform important additional tasks, such as repositioning parts of the markup (cross-references, footnotes), splitting the text into the multiple files needed for a Quarto project, plus *optionally* adding and committing the exported files using the text from Git Commit. The auxiliary files with the bibliographies (Primary Sources, Secondary Sources, Workflow), the lua filters (_extensions), and the project metadata (_quarto) will automatically be created and, if the files already exist, they will be overwritten; other files won't be modified. ScrivQ opens Quarto up to Scrivener users straight from the compile window, and it does so introducing **zero** additional dependencies. If both Scrivener and Quarto are installed, it should be able to compile right away.

# Front matter {#sec-scriv2}


[]{#scriv2}

A notable feature of the template is the front matter. Instead of using a single binder item for all, we are using one for each YAML parameter, with the idea of having them ready to be added or removed by simply ticking a box. [Most options include a small synopsis and bookmarks linking to the relevant section in the official Quarto documentation.]{.aside}We use this strategy to control a high number of variables, such as the labels involved in cross-referencing ([@fig-scriv2A]). Other complex tasks can also be managed, and are demonstrated here as proof-of-concept, such as keeping a bibliography in CSL-YAML ([@fig-scriv2B]), or controlling the the behavior of Quarto websites.


![Instead of using the `Title`, the YAML key-value pair is usually formed by item's `<\$custom:ID>`, and `<\$custom:Value>` or  `Text`. This allows the use of clearer and more descriptive titles. This should make it much easier to identify the use of each option in time, and revert to a working configuration after introducing accidental errors. The new front matter also makes it a breeze to edit parameters without disturbing YAML's sensitive white space rules.](crossref.png){#fig-scriv2A width=500 height=419}


![This demonstrates how to keep, entirely within Scrivener, a bibliography in CSL-YAML, the format favored by Pandoc and Quarto (being +10x faster to process than BibTeX and RIS). You can find this sample in the templates folder.](cslyaml.png){#fig-scriv2B width=352 height=600}


:::{.callout-note}
## A sworn of parameters
Many parameters are included for completeness, and could be erased if they are not in use. Should they become necessary, they can be create safely retrieved again from a newly created project.
:::


Looking for one way to control **Quarto** from **Scrivener**, we find not *one*, but *many* ways of doing so. So much that we are reminded of Socrates addressing Meno, in the homonymous dialogue, saying that, in looking for *the* virtude of human excellence, he had found a sworn of them coming from his interlocutor.

> ΣΩ. Πολλῇ γέ τινι εὐτυχίᾳ ἔοικα κεχρῆσθαι, ὦ Μένων, εἰ μίαν ζητῶν ἀρετὴν σμῆνός τι ἀνηύρηκα ἀρετῶν παρὰ σοὶ κειμένων (@Men 72A-B). "*I seem to be in good luck, Meno; for in seeking one virtue I have discovered a whole swarm of virtues there in your keeping.*"


:::{.callout-caution}
## Binder glitches
In some cases, the sheer number of items can cause the **Binder** to behave in strange ways. If you notice any glitches, collapse and expand the parent item for the children to be properly displayed. Removing unused parameters should alleviate the problem.
:::


Apart from one-click compilation, and facilitated parameter settings, two priorities in **ScrivQ** are cross-referencing ([@sec-scriv3]) and bibliography ([@sec-scriv42]).

# Cross-referencing {#sec-scriv3}


[]{#scriv3}

With all the affordances of **Scrivener** and **Quarto**, cross-referencing is not a trivial matter, [as the options are many]{.underline}.

[Automatic IDs ]{.aside}First, bear in  mind that  **Section Types** and **Paragraph Styles** (preceded by the  relevant prefix, such as *sec*, *cnj*, *cor*, *def*, *exm*, *exr*, *lem*, *prp*, *thm*, *eq*, *lst*, *fig*, *tbl*) are rigged with automatic IDs in the format `scriv<\$linkID>`^[Note that in Scrivener we have to escape the `$`, otherwise the placeholder will get expanded into its correct value during compilation.]. This way, there is no need to choose an ID each time an element is created, nor to remember any when another needs to be referenced (to create links we will use this same standard identifier, `scriv<\$linkID>`, select the text, link to the appropriate document, and apply the style corresponding to the element we want to reference). We leave it to Scrivener to figure out the value of the `<\$linkID>` placeholder.


:::{.callout-note}
## Translating Quarto into Scrivener

In **ScrivQ** we can use **Section Types** or **Paragraph Styles** to create **Sections**, **Tables**, **Equations**, **Figures**, **Listings**, **Callouts** (Caution, Important, Note, Tip, Warning), and **Amsthm** environments (Conjecture, Corollary, Definition, Example, Exercise, Lemma, Proposition, Theorem). We can also use **Character Styles** to easily reference any of them. Keep reading to learn how.
:::


:::{.callout-tip}
## Choosing your own label for automatic links

In **ScrivQ** one can use different keywords as labels for automatic links. Simply use one of the provided rules for **Replacements** ([@fig-scriv3]) in the Compile settings (or in the Format configurations) to have keywords such as `scriv` + `link`, `autο` + `ref`, `%autο` + `ref%`, `%autοref:` + `something-random-that-will-be-erased%`, `[autοref]`, converted into `scriv<\$linkID>` during compilation.
:::


![**Replacements** pane in the **Compile...** configurations can be used to allow different labels for automatic links. This is purely optional and we recommend limiting this to one rule or two.](Replacements.png){#fig-scriv3 width=413 height=229}


[Add prefix and markup using Character Styles ]{.aside}To cross-reference a `table`, an `example`, or a `theorem`, one could use `tbl-keyword` (*i.e.* `tbl-scriv<\$linkID>`), `exm-keyword` (*i.e.* `exm-scriv<\$linkID>`), and `thm-keyword` (*i.e.* `thm-scriv<\$linkID>`), respectively. Seeing that the prefixes are not always easy to remember, **Character Styles** are available to inject the correct markup.

The `Crossref` `Table`, for example, will turn `keyword` into `[@tbl-keyword]`^[That is, `[@tbl-scriv<\$linkID>]`.]`;` and the `Crossref Table\*` style will turn it into `[@tbl-keyword]`^[That is, `[-@tbl-scriv<\$linkID>]`.]. [The asterisk (`*`) in the title of Character Styles indicates the suppression of part of the data (as is common in LaTeX).]{.aside} Likewise, the `Crossref Example` and the `Crossref Example\*` which will result into `[@exm-keyword]` and `[-@exm-keyword] `^[That is, `[@exm-scriv<\$linkID>]` and `[-@exm-scriv<\$linkID>]`.], and so on. See *scriv4* below for yet more examples.


:::{.callout-tip}
# Cross-referencing a table

1. `Type` `your-keyword-of-choice` or `scriv<\$linkID>`, `select` it, and hit `Command + L`;
2. `Link` to the document that contains the table. (*e.g***.** scriv13);
3. Apply a **Character Style** called `Crossref Table` (*e.g.* [@tbl-scriv13]).
:::


Below we will see several examples of the same strategy being applied to several different elements. I hope that these examples proves as instructive to consult as they were to prepare.

## Amsthm {#sec-scriv4}


[]{#scriv4}

In this section we are demonstrating the cross-referencing mechanism working with **Amsthm** theorems. First, we will see all of the theorems created using **Paragraph Styles**, then they will be introduced again as **Section Types**. In the table below, you'll see several Character Styles (labeled as `Crossref...`) used to reference both.


| **Element** | **Markdown Source** | **Rendered Output** |
| :-----: | :-----: | :-----: |
| Conjecture | `[@cnj-scriv4]` | [@cnj-scriv4] |
| Conjecture | `[@cnj-scriv5]` | [@cnj-scriv5 ] |
| Corollary | `[@cor-scriv4]` | [@cor-scriv4] |
| Corollary | `[@cor-scriv6]` | [@cor-scriv6] |
| Definition | `[@def-scriv4]` | [@def-scriv4] |
| Definition | `[@def-scriv7]` | [@def-scriv7] |
| Example | `[@exm-scriv4]` | [@exm-scriv4] |
| Example | `[@exm-scriv8]` | [@exm-scriv8] |
| Exercise | `[@exr-scriv4]` | [@exr-scriv4] |
| Exercise | `[@exr-scriv9]` | [@exr-scriv9] |
| Lemma | `[@lem-scriv4]` | [@lem-scriv4] |
| Lemma | `[@lem-scriv10]` | [@lem-scriv10] |
| Proposition | `[@prp-scriv4]` | [@prp-scriv4] |
| Proposition | `[@prp-scriv11]` | [@prp-scriv11] |
| Theorem | `[@thm-scriv4]` | [@thm-scriv4] |
| Theorem | `[@thm-scriv12]` | [@thm-scriv12] |

**Paragraph Styles**


::: {#cnj-scriv4}
Conjecture
:::


::: {#cor-scriv4}
Corollary
:::


::: {#def-scriv4}
Definition
:::


::: {#exm-scriv4}
Example
:::


::: {#exr-scriv4}
Exercise
:::


::: {#lem-scriv4}
Lemma
:::


::: {#prp-scriv4}
Proposition
:::


::: {#thm-scriv4}
Let \(f\) be a function whose derivative exists in every point, then \(f\) is a continuous function.
\end{theorem}

\begin{theorem}[Pythagorean theorem]
\label{pythagorean}
This is a theorem about right triangles and can be summarised in the next
equation
\[ x^2 + y^2 = z^2 \]
\end{theorem}

And a consequence of theorem \ref{pythagorean} is the statement in the next
corollary.

\begin{corollary}
There's no right rectangle whose sides measure 3cm, 4cm, and 6cm.
\end{corollary}

You can reference theorems such as \ref{pythagorean} when a label is assigned.

\begin{lemma}
Given two line segments whose lengths are \(a\) and \(b\) respectively there is a
real number \(r\) such that \(b=ra\).
\end{lemma}
:::

::: {#cnj-scriv4}
Conjecture
:::


::: {#cor-scriv4}
Corollary
:::


::: {#def-scriv4}
Definition
:::


::: {#exm-scriv4}
Example
:::


::: {#exr-scriv4}
Exercise
:::


::: {#lem-scriv4}
Lemma
:::


::: {#prp-scriv4}
Proposition
:::


::: {#thm-scriv4}
Theorem
:::

**Section Types**


:::{#cnj-scriv5  }
Conjecture
:::

:::{#cor-scriv6  }
Corollary
:::

:::{#def-scriv7  }
Definition
:::

:::{#exm-scriv8  }
Example
:::

:::{#exr-scriv9  }
Exercise
:::

:::{#lem-scriv10 }
Lemma
:::

:::{#prp-scriv11  }
Proposition
:::

:::{#thm-scriv12  }
Theorem
:::

## Block Elements {#sec-scriv13}


[]{#scriv13}

Now we repeat the same approach we saw with the **Amsthm** theorems with other **Quarto** and **Pandoc** block elements, such as computations (diagrams), equations, listings, figures, and tables. This time, apart from **Paragraph Styles** and **Section Types**, we will also use `Raw Markdown` to accomplish the same tasks. As before, all of these elements receive automatic IDs.


| **Element** | **Markdown Source** | **Rendered Output** |
| :-----: | :-----: | :-----: |
| Diagram | `[@fig-scriv16]` | [@fig-scriv16] |
| Diagram | `[@fig-scriv16B]` | [@fig-scriv16B] |
| Diagram | `[@fig-scriv17]` | [@fig-scriv17] |
| Diagram | `[@fig-scriv18]` | [@fig-scriv18] |
| Diagram | `[@fig-scriv18B]` | [@fig-scriv18B] |
| Diagram | `[@fig-scriv19]` | [@fig-scriv19] |
| Equation | `[@eq-scriv21]` | [@eq-scriv21] |
| Equation | `[@eq-scriv22]` | [@eq-scriv22] |
| Figure | `[@fig-scriv24]` | [@fig-scriv24] |
| Figure (Multipart) | `[@fig-scriv25]` | [@fig-scriv25] |
| Figure (Multipart) | `[@fig-scriv25A]` | [@fig-scriv25A] |
| Figure (Multipart) | `[@fig-scriv25B]` | [@fig-scriv25B] |
| Figure (Multipart) | `[@fig-scriv26]` | [@fig-scriv26] |
| Figure (Multipart) | `[@fig-scriv26A]` | [@fig-scriv26A] |
| Figure (Multipart) | `[@fig-scriv26B]` | [@fig-scriv26B] |
| Listing | `[@lst-scriv28]` | [@lst-scriv28] |
| Listing | `[@lst-scriv29]` | [@lst-scriv29] |
| Table | `[@tbl-scriv31]` | [@tbl-scriv31] |
| Table | `[@tbl-scriv32]` | [@tbl-scriv32] |
| Table (Multipart) | `[@tbl-scriv33]` | [@tbl-scriv33] |
| Table (Multipart) | `[@tbl-scriv33A]` | [@tbl-scriv33A] |
| Table (Multipart) | `[@tbl-scriv33B]` | [@tbl-scriv33B] |

: Cross-referencing diagrams, figures, listings and tables. {#tbl-scriv13}


### Computations {#sec-scriv14}


[]{#scriv14}

To use computations, there might be additional steps involved, such as installing R along with additional packages.

install.packages("reticulate")
install.packages("markdown")
install.packages("tidyverse")
install.packages("kableExtra")
downlit, xml2


| **Element** | **Markdown Source** | **Rendered Output** |
| :-----: | :-----: | :-----: |
| R Computation | `[@fig-scriv?]` | [@fig-scriv?] |
| R Computation | `[@fig-scriv?]` | [@fig-scriv?] |
| Python Computation | `[@fig-scriv?]` | [@fig-scriv?] |
| Python Computation | `[@fig-scriv?]` | [@fig-scriv?] |

: Cross-referencing **R Computations** and **Python Computations**. {#tbl-scriv14}


### Diagrams {#sec-scriv15}


[]{#scriv15}

Let us see how we can use **raw markup**, **Section Types** and **Paragraph Styles** to create **Dot** and **Mermaid** diagrams.


| **Element** | **Markdown Source** | **Rendered Output** |
| :-----: | :-----: | :-----: |
| Diagram Dot | `[@fig-scriv16]` | [@fig-scriv16] |
| Diagram Dot | `[@fig-scriv16B]` | [@fig-scriv16B] |
| Diagram Dot | `[@fig-scriv17]` | [@fig-scriv17] |
| Diagram Mermaid | `[@fig-scriv18]` | [@fig-scriv18] |
| Diagram Mermaid | `[@fig-scriv18B]` | [@fig-scriv18B] |
| Diagram Mermaid | `[@fig-scriv19]` | [@fig-scriv19] |

: Cross-referencing **Dot Diagrams** and **Mermaid Diagrams**. {#tbl-scriv15}

```{dot}
//| label: fig-scriv16
//| fig-cap: Figure caption

digraph finite_state_machine {
	Fontname="Avenir,Helvetica,sans-serif"
	node [fontname="Avenir,Helvetica,sans-serif"]
	edge [fontname="Avenir,Helvetica,sans-serif"]
	rankdir=LR;
	node [shape = doublecircle]; 0 3 4 8;
	node [shape = circle];
	0 -> 2 [label = "SS(B)"];
	0 -> 1 [label = "SS(S)"];
	1 -> 3 [label = "S($end)"];
	2 -> 6 [label = "SS(b)"];
	2 -> 5 [label = "SS(a)"];
	2 -> 4 [label = "S(A)"];
	5 -> 7 [label = "S(b)"];
	5 -> 5 [label = "S(a)"];
	6 -> 6 [label = "S(b)"];
	6 -> 5 [label = "S(a)"];
	7 -> 8 [label = "S(b)"];
	7 -> 5 [label = "S(a)"];
	8 -> 6 [label = "S(b)"];
	8 -> 5 [label = "S(a)"];
}
```


```{dot}
//| label: fig-scriv16B
//| fig-cap: Figure caption

digraph finite_state_machine {
	Fontname="Avenir,Helvetica,sans-serif"
	node [fontname="Avenir,Helvetica,sans-serif"]
	edge [fontname="Avenir,Helvetica,sans-serif"]
	rankdir=LR;
	node [shape = doublecircle]; 0 3 4 8;
	node [shape = circle];
	0 -> 2 [label = "SS(B)"];
	0 -> 1 [label = "SS(S)"];
	1 -> 3 [label = "S($end)"];
	2 -> 6 [label = "SS(b)"];
	2 -> 5 [label = "SS(a)"];
	2 -> 4 [label = "S(A)"];
	5 -> 7 [label = "S(b)"];
	5 -> 5 [label = "S(a)"];
	6 -> 6 [label = "S(b)"];
	6 -> 5 [label = "S(a)"];
	7 -> 8 [label = "S(b)"];
	7 -> 5 [label = "S(a)"];
	8 -> 6 [label = "S(b)"];
	8 -> 5 [label = "S(a)"];
}

```

```{dot}
//| label: fig-scriv17

//| fig-caption: A Graphviz-generated state machine diagram
digraph finite_state_machine {
	Fontname="Avenir,Helvetica,sans-serif"
	node [fontname="Avenir,Helvetica,sans-serif"]
	edge [fontname="Avenir,Helvetica,sans-serif"]
	rankdir=LR;
	node [shape = doublecircle]; 0 3 4 8;
	node [shape = circle];
	0 -> 2 [label = "SS(B)"];
	0 -> 1 [label = "SS(S)"];
	1 -> 3 [label = "S($end)"];
	2 -> 6 [label = "SS(b)"];
	2 -> 5 [label = "SS(a)"];
	2 -> 4 [label = "S(A)"];
	5 -> 7 [label = "S(b)"];
	5 -> 5 [label = "S(a)"];
	6 -> 6 [label = "S(b)"];
	6 -> 5 [label = "S(a)"];
	7 -> 8 [label = "S(b)"];
	7 -> 5 [label = "S(a)"];
	8 -> 6 [label = "S(b)"];
	8 -> 5 [label = "S(a)"];
}

```


```{mermaid}
%%| label: fig-scriv18
%%| fig-cap: Figure caption
%%| column: page


graph TD

  Pred(Predication)
  PredicationLatoSensu(Lato Sensu)
  PredicationStrictoSensu(Stricto Sensu)

  Pred ---> PredicationLatoSensu
  Pred ---> PredicationStrictoSensu

  Opt1("The predicate is the essence (τὸ τι ἦν εἶναι)")
  %% e.g. the human being is a racional animal
  Opt2("The not-natural predicate (παρὰ φύσιν)")
  %% e.g. the musical is white


  PredicationLatoSensu -- τὸ αὐτῷ εἶναι κατηγορεῖσθαι --> Opt1
  PredicationLatoSensu -- κατὰ συμβεβηκὸς κατηγορεῖσθαι --> Opt2

  Opt3("Predicate is an accident")
  Opt4("Predicate is part of the definition of the subject")

  PredicationStrictoSensu -- ὡς συμβεβηκότα κατηγορεῖσθαι --> Opt3
  PredicationStrictoSensu -- τό ἐν τῷ τί ἐστι --> Opt4

  SubOpt1("Attributes proper (καθ᾽ αὑτὸ ἴδιον)")
  SubOpt2("Accidents proper (συμβεβηκός καθ᾽ αὑτὸ)")
  SubOpt3("Accidents without qualification (ἁπλῶς συμβεβηκός)")

  Opt3 --> SubOpt1
  Opt3 -- "per se₂" --> SubOpt2
  Opt3 --> SubOpt3

  SubOpt4("Genus (γένος)")
  SubOpt5("Especies (εἶδος)")

  Opt4 -- "per se₁" --> SubOpt4
  Opt4 -- "per se₁" --> SubOpt5
```

```{mermaid}
%%| label: fig-scriv18B
%%| fig-cap: Figure caption

flowchart LR
  A[Hard edge] --> B(Round edge)
  B --> C{Decision}
  C --> D[Result one]
  C --> E[Result two]

```

```{mermaid}
%%| label: fig-scriv19

%%| fig-cap: A Mermaid figure using a Scrivener Section Type [Diagram Mermaid], see https://quarto.org/docs/authoring/diagrams.html for more details

graph TD
    Subs -->Mat:::I
    Subs -->|τόδε τι|For:::D
    Subs -->|τόδε τι|Com:::D2
    Mat --> Pot:::I
    For --> Ent:::D
    Ent --> Ent1:::D
    Ent --> Ent2:::D


    Subs(οὐσία)
    Mat(ὕλη)
    Pot(δύναμις)
    For(μορφὴ καὶ εἶδος)
    Ent(ἐντελέχεια)
    Ent1("1:ὡς ἐπιστήμη")
    Ent2("2:ὡς θεωρεῖν")
    Com(τὸ ἐκ τούτων)

    Subs(Substance)
    Mat(Matter)
    Pot(Potency)
    For(Form)
    Ent(Actuality)
    Ent1(capable of performing its end, but currently not doing so)
    Ent2(performing its end)
    Com(Compound)


    classDef default fill:none
    classDef D fill:#a0e85b
    classDef D2 fill:#fb9643
    classDef I fill:#fb6961

```




| **Element** | **Markdown Source** | **Rendered Output** |
| :-----: | :-----: | :-----: |
| Equation | `[@eq-scriv21]` | [@eq-scriv21] |
| Equation | `[@eq-scriv22]` | [@eq-scriv22] |

: Cross-referencing **Equations**. {#tbl-scriv20}

$$t' = \frac{t - \dfrac{v}{c^{2}}x}{\sqrt{1 - \dfrac{v^{2}}{c^{2}}}}$$ {#eq-scriv21}


$$t' = \frac{t - \dfrac{v}{c^{2}}x}{\sqrt{1 - \dfrac{v^{2}}{c^{2}}}}
$$ {#eq-scriv22}


### Figures {#sec-scriv23}


[]{#scriv23}

| **Element** | **Markdown Source** | **Rendered Output** |
| :-----: | :-----: | :-----: |
| Figure | `[@fig-scriv24]` | [@fig-scriv24] |
| Figure (Multipart) | `[@fig-scriv25]` | [@fig-scriv25] |
| Figure (Multipart) | `[@fig-scriv25A]` | [@fig-scriv25A] |
| Figure (Multipart) | `[@fig-scriv25B]` | [@fig-scriv25B] |
| Figure (Multipart) | `[@fig-scriv26]` | [@fig-scriv26] |
| Figure (Multipart) | `[@fig-scriv26A]` | [@fig-scriv26A] |
| Figure (Multipart) | `[@fig-scriv26B]` | [@fig-scriv26B] |

: Cross-referencing **Figures**. {#tbl-scriv23}


![This figure uses custom metadata values to identify the class, ID, width and height. The %CA%​ (**C**aption **A**ttributes) tag at the start of the caption is replaced with the correct Scrivener placeholders by the compiler; see global replacements for the details...](Ulysses1.jpg){#fig-scriv24 .column-page width=486 height=402}



:::{#fig-scriv25 .column-page layout-ncol=2}

![Elephant.](Elephant2.jpg){#fig-scriv25A width=245 height=252}


![Angry elephant with big trunk.](Elephant3.jpg){#fig-scriv25B width=306 height=249}


This demonstrates generating a multi-panel figure using a Scrivener Section Type [`Multipart Figure`] instead of using raw markdown as shown here. ID, Class, and Attributes specific to the block [`#fig-elephants2 .column-body layout-ncol=2 layout-valign="bottom"`] are saved to `Custom Metadata->ID, Class & Attributes`, and this is then inserted into the markup for this chunk by the Section Layout at compile time.

:::


::: {#fig-scriv26 .column-page layout-ncol=2 }

![Elephant castle.](Elephant2.jpg){#fig-scriv26A width=243 height=251}


![Angry elephant with big trunk.](Elephant3.jpg){#fig-scriv26B width=304 height=248}


Quarto allows the creation of figure panels with sub-figures. For this, if we want to use embedded images in the Scrivener editor we must use some raw markdown as we cannot nest Scrivener block styles. Note we can use the Scale Image... Tool in Scrivener and these sizes get exported to Quarto and the output. Here we scale both images to the same height.
:::

### Listings {#sec-scriv27}


[]{#scriv27}


| **Element** | **Markdown Source** | **Rendered Output** |
| :-----: | :-----: | :-----: |
| Listing | `[@lst-scriv28]` | [@lst-scriv28] |
| Listing | `[@lst-scriv29]` | [@lst-scriv29] |

: Cross-referencing **Listings**. {#tbl-scriv27}


```{#lst-scriv28 .ruby lst-cap="Ruby code block. The listing Paragraph Style uses the custom metadata of the current text document."}
require "unicode/name"

characters = %w(α β γ δ ε ζ η θ ι κ λ μ ν ξ ο π ρ σ τ υ φ χ ψ ω ἀ ἄ ᾄ ἂ ᾂ ἆ ᾆ ᾀ ἁ ἅ ᾅ ἃ ᾃ ἇ ᾇ ᾁ ά ά ᾴ ὰ ᾲ ᾰ ᾶ ᾷ ᾱ ᾳ ἐ ἔ ἒ ἑ ἕ ἓ έ έ ὲ)

# characters = 'ἄ'
characters.each do |character|
  puts character.unpack('U*').map { |i| "U+#{i.to_s(16).rjust(4, '0').upcase}" }.join
  puts Unicode::Name.of character
end
```



```{#lst-scriv29 lst-cap="The caption" .ruby }

#!/usr/bin/env ruby
# frozen_string_literal: false

Encoding.default_external = Encoding::UTF_8

Dir["#{__dir__}/Ruby/**/*.rb"].each do |file|
  require_relative file
end

```

### Tables {#sec-scriv30}


[]{#scriv30}


| **Element** | **Markdown Source** | **Rendered Output** |
| :-----: | :-----: | :-----: |
| Table | `[@tbl-scriv31]` | [@tbl-scriv31] |
| Table | `[@tbl-scriv32]` | [@tbl-scriv32] |
| Table (Multipart) | `[@tbl-scriv33]` | [@tbl-scriv33] |
| Table (Multipart) | `[@tbl-scriv33A]` | [@tbl-scriv33A] |
| Table (Multipart) | `[@tbl-scriv33B]` | [@tbl-scriv33B] |

: Cross-referencing **Tables**. {#tbl-scriv30}

| 1 | 2 | 3 |
| ----- | ----- | ----- |
| 4 | 5 | 6 |

: This table uses `Text` as **Section Type** , and `Table Caption` as the **Paragraph Style** for the caption. {#tbl-scriv31}


| 1 | 2 | 3 |
| ----- | ----- | ----- |
| 4 | 5 | 6 |

: This is an example of `Table` as **Section Type**. The caption and the remaining attributes are added as part of the Section Type markup. {#tbl-scriv32 .column-page }

:::{#tbl-scriv33   layout-ncol=1}

| **Element** | **Prefix** | **Markdown Source** | **Rendered Output** |
| :-----: | :-----: | :-----: | :-----: |
| Equation A | eq | A | B |
| Equation A | eq | C | D |
| Listing A | lst | E | F |

: First Table {#tbl-scriv33A}


| **Element** | **Prefix** | **Markdown Source** | **Rendered Output** |
| :-----: | :-----: | :-----: | :-----: |
| Equation B | eq | A | B |
| Equation B | eq | C | D |
| Listing B | lst | E | F |

: Second Table {#tbl-scriv33B}


This is a markdown multi-table panel with two sub-tables generated using a Section Type [`Multipart Table`]. Note that Custom Metadata holds the cross-referencing label, layout class, and the attributes for this multipart table, which will be added by the Section Layout by the compiler, using the Scrivener placeholders: `<​$​​custom:Class>` `<​$​​custom:Attributes>`


:::

### Sections {#sec-scriv34}


[]{#scriv34}

The text sections can be referenced with **Character Styles**, and created with **Paragraph Styles** or **Section Types**. As before, all of these receive automatic IDs.

| **Element** | **Markdown Source** | **Rendered Output** |
| :-----: | :-----: | :-----: |
| Section | `[@sec-scriv34]` | [@sec-scriv34] |
| Section | `[@sec-scriv35]` | [@sec-scriv35] |
| Section | `[@sec-scriv37]` | [@sec-scriv37] |
| Section | `[@sec-scriv38]` | [@sec-scriv38] |
| Section | `[@sec-scriv39]` | [@sec-scriv39] |

: Cross-referencing sections. {#tbl-scriv34}

Note that the unnumbered section cannot be referenced.

#### Section {#sec-scriv35}


[]{#scriv35}

This is an example of the `Section` section type.


#### Section {-} {#sec-scriv36 .unnumbered}

[]{#scriv36}

This is an example of the `Section {-}` section type.

#### Heading {#sec-scriv37}

#### Heading + Break {#sec-scriv38}

This is an example of the `Heading + Break` section type.
{{< pagebreak >}}


{{< pagebreak >}}

#### Section + Break {#sec-scriv39}

This is an example of the `Section + Break` section type.

## Footnotes {#sec-scriv40}


[]{#scriv40}

We can use also use a **Section Type** to create and a **Character Style** (`Footnote`) to reference footnotes using the standard identifier.[^fn-scriv41]

[^fn-scriv41]: []{#scriv41}  This strategy has the outstanding advantage of allowing us to use, that is right, you guessed it, **Paragraph Styles** and  **Character Styles** in footnotes. There is one small caveat, however: the user has to remember to [always add two empty spaces]{.underline} before each new **paragraph** in the footnote environment.

# Cite Tools {#sec-scriv42}


[]{#scriv42}

Part of the motivation behind ScrivQ comes from another project I co-developed: the [Cite Tools](https://bcdavasconcelos.github.io/citetools) extension for [Pandoc](https://pandoc.org) and [Quarto](https://quarto.org).

As I was first starting to use [Citeproc], coming from the jurassic [**BibTeX**], I was exceptionally pleased with its speed and reliability. Apart from being *a lot* faster, it would produce the same output across all supported formats (which amounts to over 60, including **HTML**, **LaTeX**, and **DOCX**). Out-of-the-box, however, it lacked support for really ordinary **BibTeX functionalities**, such as the ability to split the bibliography into multiple sections, or the ability to cite arbitrary fields of the references (*e.g.* using `citetitle`, `citeauthor`, `citefield`). It also lacked the interesting **backref** option afforded by **BibTeX** used in conjunction to **HyperRef** to create linked indexes of citations.


![Cite Tool bundles together several lua filters to address complex bibliography demands while keeping the output consistent across formats. If you have suggestions for improvements, or bug reports, please [open an issue at the citetools repository](https://github.com/bcdavasconcelos/citetools/issues/new/choose). Logo image generated with Dall-E using "*Enso-like round black and white painting with ancient greek war-ship with man tied to the mast as prompt*".](citetools.png){#fig-scriv42 width=276 height=276}


To step around these limitations, I started tinkering with existing filters available on Github (all of them by Albert Krewinkel), and co-developed Cite Field, to create **Cite Tools**, an extension for Quarto and Pandoc that allows the easy creation of a **Multipart Bibliography** (*e.g.* split in *primary* and *secondary* sources, see [@fig-scriv54A]), the citation of arbitrary fields of the references (see [@fig-scriv54B])^[In the official nomenclature, CSL has variables, BibTeX has fields, and RIS has tags. As a general rule, we have stuck to the term fields.], and the linking each bibliography entry back to its in-text occurrences (see [@fig-scriv54C])^[Linked glossaries can also easily be created by dressing it as bibliography.]. All of this with little to no configuration needed from the user. More than anywhere else in ScrivQ that has **Cite Tools** at its core. The filters are built in, and front matter is set up so that the necessary files are automatically created during compilation.


:::{.callout-warning appearance="simple"}
## Deleting Cite Tools from ScrivQ will cause the compilation to fail.
:::


:::{.callout-tip appearance="simple"}
If you need to use **Cite Tools **in an ordinary Quarto project, use  `quarto install extension bcdavasconcelos/citetools` to install it.
:::


[Citeproc]: https://en.wikipedia.org/wiki/CiteProc

## Citation {#sec-scriv43}


[]{#scriv43}

Let us quickly recapitulate the basics of Pandoc Citeproc and how it uses citations.

:::{.callout-note}
## Official documentation
See the official documentation on citations at [Pandoc](pandoc.org/MANUAL.html#citations) and [Quarto](quarto.org/docs/authoring/footnotes-and-citations.html#sec-citations).
:::


:::{.column-margin}
As we know, each citation must have a key, composed of `@` + the citation identifier that must begin with a letter, digit, or `_`, and may contain alphanumerics, `_`, and internal punctuation characters (`:.#$%&-+?<>~/`).
:::


The citation syntax is very simple: `@Citekey` for **Author (Date)** (an *in-text* citation); `[@Citekey]` for **(Author, Date)**; and `[-@Citekey]` for **(Date)**. Multiple citations can be grouped in the same brackets separated by semicolons `[@CitekeyA; @CitekeyB]`. The citation key is optionally followed by a locator, which can be a page number, a line number, a chapter number, or a section number, preceded by a comma.


| **Markdown Source** | **Rendered output** |
| :-----: | :-----: |
| `@Long2004` | @Long2004 |
| `[@Long2004]` | [@Long2004] |
| `[@Long2004, p.15]` | [@Long2004, p.15] |
| `[-@Long2004]` | [-@Long2004] |
| `[-@Long2004, p.15]` | [-@Long2004, p.15] |

: Citation syntax in Quarto and Pandoc.  {#tbl-scriv43}

:::{.callout-note appearance="simple"  collapse="true"}
## (Date)
...on the deliberations of the prudent person [-@Long2004].<br>
`...on the deliberations of the prudent person [-@Long2004].`


...on the deliberations of the prudent person [-@Long2004, p.17].<br>
`...on the deliberations of the prudent person [-@Long2004, p.17].`
:::


:::{.callout-note appearance="simple"  collapse="true"}
## Author (Date)

@Long2004 says that...<br>
`@Long2004 says that...`
:::


:::{.callout-note appearance="simple"  collapse="true"}
## (Author, Date)
...on the deliberations of the prudent person [@Long2004].<br>
`...on the deliberations of the prudent person [@Long2004]`.


...on the deliberations of the prudent person [@Long2004, p.17].<br>
`...on the deliberations of the prudent person [@Long2004, p.17]`.
:::


:::{.callout-note appearance="simple"  collapse="true"}
## (Author, Date; Author, Date)
...on the deliberations of the prudent person [@Long2004; @hoffman2014].<br>
`...on the deliberations of the prudent person [@Long2004; @hoffman2014]`.


...on the deliberations of the prudent person [@Long2004, p.17; @hoffman2014, p.15].<br>
`...on the deliberations of the prudent person [@Long2004, p.17; @hoffman2014, p.15].`
:::


That is pretty much all there is to it. Now that we have the basics covered, let us see what **Cite Field** can do for us.

## Cite Field {#sec-scriv44}


[]{#scriv44}

In many areas, we are frequently invited to comment on different editions and translations of the same classical works. In such cases, we refer not only to the `author` and `issued` date of a publication, but also to its `editor`, `translator`, `publisher`, and even `original-title` and `edition`. But how to do this? With **Cite Tools** enabled, the answer lies in a small variation of Pandoc's vanilla syntax for citations.


:::{.callout-note}
## TLDR
Several **Character Styles** are available to inject the correct markup (`[@Citekey]{.csl_field}`) to cite specific fields from your references.
:::


:::{.callout-important}
Internally, Pandoc uses the **C**itation **S**tyle **L**anguage format for bibliographies. This means that **we must use the CSL variable names** (see [@tbl-scriv47]), and not necessarily the field name you may see in a **RIS** ou **BibTeX** bibliography. The correct way to print the book title, for example, would be `[@Citekey]{.container-title}` (and **not** using the BibTeX alternative which is `booktitle`).
:::

![Printed page with many examples of the citation markup employed by Cite Tools.](citefield.png){#fig-scriv44 width=445 height=458}


[For the Cite Field filter,]{.smallcaps} **Character Styles** provide support for the Cite Field Lua Filter, which can be used to cite arbitrary fields of the references.


> The works of `[@AristOp]{.author}` were first edited by `[@AristOp]{.editor}` in `[@AristOp]{.issued}`.
> The works of [@AristOp]{.author} were first edited by [@AristOp]{.editor} in [@AristOp]{.issued}.

> Later, the `[@DA]{.title}` (`[@DA]{.title-short}`) was edited by `[@DABiehl1896]{.editor}` in `[@DABiehl1896]{.issued}` (reprinted in `[@DATheiler]{.translator}'s` `[@DATheiler]{.issued}` translation).
> Later, the [@DA]{.title} was edited by [@DABiehl1896]{.editor} in [@DABiehl1896]{.issued} (reprinted in [@DATheiler]{.translator}'s [@DATheiler]{.issued} translation).

:::{.callout-warning}
You can set link-fields to false to avoid undesired linking when citing specific fields.
:::


Here is a printout of different citation fields followed by a concrete example of how to use them in a document.

| Raw | Output |
| :-----: | :-----: |
| [@AristOp]{.author} | [@AristOp]{.author} |
| [@AristOp]{.editor} | [@AristOp]{.editor} |
| [@AristOp]{.title} | [@AristOp]{.title} |
| [@AristOp]{.issued} | [@AristOp]{.issued}^[Note that [-@AristOp] would render as [-@AristOp].] |
| [@AristOp]{.publisher} | [@AristOp]{.publisher} |
| [@AristOp]{.publisher-place} | [@AristOp]{.publisher-place} |
| [@AristOp]{.edition} | [@AristOp]{.edition} |
| [@AristOp]{.number-of-volumes} | [@AristOp]{.number-of-volumes} |

: Printout of different fields from the reference {tbl-colwidths="[50,50]"}


With this, we could state the following in our text:

> The works of [@AristOp]{.author} were first edited by [@AristOp]{.editor} in [@AristOp]{.issued}.
Which would compile as:


The works of [@AristOp]{.author} were first edited by [@AristOp]{.editor} under the title [@AristOp]{.title} in [@AristOp]{.issued}.

And render as:

> The works of Aristotle were first edited by Bekker under the title Aristotelis opera in 1831.



| [CSL] | [BibTeX] | [RIS] |
| :-----: | :-----: | :-----: |
| article-journal | article | JOUR<br> JFULL<br>  INPR |
| book | book<br> proceedings<br> manual | ANCIENT<br> BOOK<br> CLSWK<br> DICT<br> EBOOK<br> EDBOOK |
| pamphlet | booklet | PAMP |
| chapter | inbook<br> incollection | CHAP<br> ECHAP |
| paper-conference | inproceedings | CONF CPAPER |
| thesis | mastersthesis<br> phdthesis<br> misc | THES |
| report | techreport | GOVDOC<br> GRANT<br> HEAR<br> RPRT<br> STAND |
| manuscript | unpublished | MANSCPT |

: CSL-YAML/CSL-JSON types alongside their BibTeX and RIS equivalents. Notice how we are using HTML line breaks to create lists inside table cells. {#tbl-scriv46}

[CSL]: https://docs.citationstyles.org/en/stable/specification.html#appendix-iii-types
[CSL-YAML]: https://docs.citationstyles.org/en/stable/specification.html
[CSL-JSON]: https://docs.citationstyles.org/en/stable/specification.html
[BibTeX]: https://en.wikipedia.org/wiki/BibTeX#Entry_types
[RIS]: https://en.wikipedia.org/wiki/RIS_(file_format)#Type_of_reference



| [CSL variables] | [BibTeX Fields] | [RIS Tags] |
| :-----: | :-----: | :-----: |
| abstract | abstract | AB |
| author | authors | AU<br> A1 |
| call-number | library | ID |
| chapter-number<br> collection-number<br> number<br> issue | chapter<br> number<br> issue | IS |
| collection-title | series | - |
| container-title | booktitle<br> journal | BT<br> T2<br> JA<br> JF<br> JO |
| DOI | doi | DO |
| editor | editors | A2<br> ED |
| genre | type | - |
| ISSN | issn | SN |
| issued | date | PY<br> Y1 |
| keywords | keywords | KW |
| language | langid | LA |
| number-of-volumes | volumes | NV |
| original-title | origtitle | OR* |
| page | pages | SP<br> EP |
| publisher | publisher<br> school<br> institution<br> organization<br> howpublished | PB |
| publisher-place | address | PP |
| title | title | TI<br> T1<br> CT |
| title-short | shorttitle | ST* |
| url | URL | UR<br> LK |
| version | version | - |
| volume | volume | VL |

: CSL-YAML/CSL-JSON variables alongside corresponding [BibTeX](https://github.com/jgm/pandoc/blob/main/src/Text/Pandoc/Citeproc/BibTeX.hs) fields and  [RIS](https://github.com/jgm/pandoc/blob/main/src/Text/Pandoc/Readers/RIS.hs) tags {#tbl-scriv47}


[CSL variables]: https://docs.citationstyles.org/en/stable/specification.html#appendix-iv-variables
[BibTeX Fields]: https://en.wikipedia.org/wiki/BibTeX#Field_types
[RIS Tags]: https://en.wikipedia.org/wiki/RIS_(file_format)#Tags





| CSL Field | Markdown Source | Output |
| :-----: | :-----: | :-----: |
| Author | `[@AristOp]{.author}` | [@AristOp]{.author} |
| Editor | `[@AristOp]{.editor}` | [@AristOp]{.editor} |
| Issued | `[@AristOp]{.issued}` | [@AristOp]{.issued} |
| Original-title | `[@DA]{.original-title}` | [@DA]{.original-title} |
| Publisher | `[@AristOp]{.publisher}` | [@AristOp]{.publisher} |
| Publisher-place | `AristOp` | AristOp |
| Title | `[@AristOp]{.title}` | [@AristOp]{.title} |
| Title-short | `[@AristOp]{.title-short}` | [@AristOp]{.title-short} |
| Translator | `[@DABiehl1896 ]{.editor}` | [@DABiehl1896 ]{.editor} |
| Translator | `[@DATheiler]{.translator}` | [@DATheiler]{.translator} |

: Simple example of how we are using styles to create the correct markup {#tbl-scriv48  }

## Multipart Bibliography {#sec-scriv49}


[]{#scriv49}

In many areas of research, the ability to split the bibliography into sections is *conditio sine qua non* for publishing. In the humanities, for example, there are usually primary and secondary sources. In philosophy, even, they can be very nuanced with sections dedicated to original sources, translations, commentaries, and so on. The **Section Type** titled `Multipart Bibliography` can be used to create as many new bibliography sections as necessary. Add to the text the references that should print there, and let it know in the custom meta data `<\$custom:Attributes>` the format being used (*e.g.* `bib`, `yml`, `ris`).


:::{.callout-tip}
## Bibliography formats

Speaking about formats, the most common bibliography formats are [CSL-YAML], [CSL-JSON], [BibTeX], and [RIS]. Internally, **Pandoc** and **Quarto** use the CSL (**C**itation **S**tyle **L**anguage) to handle bibliography, so **CSL-YAML** and **CSL-JSON** perform much better (up to 10 times faster) then older formats like **BibTeX** or **RIS** that will have to be converted by **Pandoc** before it can be understood.
:::


ScrivQ provides all the data needed for the project to compile, but, before you can properly start using Citeproc in your own projects, you will need to generate your own bibliography data. In principle, absolutely nothing stops you from simply keeping a bibliography manually in Scrivener (or semi-manually), but this is not very easy to manage if you have many projects sharing the same references. (Luckily, in this regard, Scrivener offers the best text comparison tools I can think of). The best alternative, it seems, is to rely on specialized software such as Zotero, Bookends, Bibdesk (also JabRef, Endnote and [others](en.wikipedia.org/wiki/Comparison_of_reference_management_software)). These programs allow you to edit your bibliography and easily export it in the desired format, which can be copied and pasted to different Scrivener projects. Zotero even offers an API that can be used to download shared libraries by merely accessing a link, such as `https://api.zotero.org/groups/`[LibraryID]{.underline}`/items?format=bibtex&limit=999` where `LibraryID` corresponds to the librarie's 7-digit code (visible in the middle of the library URL).


![This will result in a separate file, whose path will be added to the front matter, with the content of the text. The resulting bibliography will print right where we placed it in our project.](newbibliography.png){#fig-scriv49A width=386 height=221}


![On the left we have the **Table of Contents**; on the top-right we see the printed bibliography (page 31) and, on the bottom-right, the files automatically created during the compilation process.](resultbib.png){#fig-scriv49B width=428 height=295}


:::{.callout-important}
## The sky is the limit

You can add as many bibliographies as you want!
:::

:::{.callout-tip}
## Bibliography files in the system

As you can see, there is no need to keep separate bibliography files in the system. You can simply copy and paste the data from your bibliography manager to Scrivener. If you are using a mac, check you Bookends and Bibdesk; and, in all platforms, definitively get Zotero as well.
:::


:::{.callout-note}
## From structured bibliography data to rendered output

We are feeding the data precisely where you would usually write out your references. In this case, however, we are providing the structured data and letting Citeproc determine how to display it based on the CSL file rules.
:::

## Citation Style Language {#sec-scriv50}


[]{#scriv50}


:::{.callout-note}
Did you notice that we used `[@AristOp]{.issued}` instead of ~~`[@AristOp]{.date}`~~? And `AristOp` instead of ~~`[@AristOp]{.city}`~~?
:::

![][226091195-7b27f8a7-c802-4cbb-bac9-81265b7aed45]

## Citation Backlinks {#sec-scriv51}


[]{#scriv51}

In the vanilla Pandoc Citeproc, you can use link-citations to control whether citations in the body of the text should be clickable links to the reference in the bibliography (e.g. [@EN]{.title-short}). This is a very useful feature, especially when you want to quickly check the source of a citation without having to scroll through the whole text.

::: {.callout-tip appearance="simple"} The citetools extension will take this one step further and add, in a crescent ordinal fashion [1, 2, 3, 4]^[In other output formats, such as PDF, the reader will see the page number instead of a crescent ordinal number.], a backlink to each citation an entry has received in the document. :::
This allows the reader to easily arrive at sections of the text where the same reference was discussed, quickly seeing with the array of backlinks, how many times each reference was used in the text (see reference at the bottom of the text).

### How to avoid an excess of undesired links {#sec-scriv52}


[]{#scriv52}

In citetools there are options to avoid undesired linking and anomalies caused by citing individual fields, such as repeated links to the same entry in a single phrase or section.

First, there is the option to force a citation to not be a link by adding a simple dot at the end of the .csl_field.

| Default | Link--suppresion |
| ----- | ----- |
| [@EN]{.title} | [@EN]{.title.} |
| [@EN]{.title} | [@EN]{.title.} |

Then, there is also the global link-fields option, which allows the user to turn off links in citations that target individual fields. It can be used in conjunction with other options that target the bibliography, such as link-citations and link-bibliography.
link-citations: true # <1>
link-fields: true # <2>
link-bibliography: true # <3>
lang: en-ZA # <4>

1. Hyperlink citations to the corresponding bibliography entries. Defaults to false.
2. Hyperlink citations that target specific CSL fields to the corresponding entries in the bibliography. If link-citations is true, this defaults to true.
3. Hyperlink DOIs, PMCIDs, PMID, and URLs in bibliographies. Defaults to true.
4. Affects the bibliography tags. Defaults to en-US.

## About {#sec-scriv53}


[]{#scriv53}

Logo image generated Dall-E using Enso-like round black and white painting with ancient greek war-ship with man tied to the mast as prompt.
License
Filters published under the MIT license by Albert Krewinkel (tarleb).

* multibib
* multiple-bibliographies
* citation-backlinks
* section-bibliographies

Filters published under the MIT license by Albert Krewinkel (tarleb) & Bernardo Vasconcelos (bcdavasconcelos).

* citefield

All Pandoc Lua filters in this extension are published under the MIT license, see file LICENSE for details.
The Cite Tools Documentation is under a Creative Commons Attribution-NonCommercial 4.0 International License.

:::{#fig-scriv54 .column-page }

![Multipart bibliography with sections, such as primary sources and secondary sources](2023-03-18-22-02-26.png){#fig-scriv54A width=452 height=207}


![Cite Field allows the evocation of arbitrary information from the references, such as `author`, `editor`, `translator` (using [CSL variables] name conventions)](2023-03-18-22-24-10.png){#fig-scriv54B width=456 height=108}


![The **Citation Backlinks** adds an index of cited references to the bibliography, with links back to all in-text citations. It also allows the user to turn these off globally or in *ad hoc* fashion.](2023-03-18-22-32-06.png){#fig-scriv54C width=465 height=258}

:::

:::{#scriv55 .column-page }
::: {#first-column .column width=15%}

**BibTeX**

```bibtex
@book{AristOp,
author = {Aristotle},
editor = {Bekker, Immanuel},
title = {Aristotelis opera},
publisher = {Reimer},
address = {Berlim},
volumes = {4},
edition = {1},
year = {1831}
}
```

**RIS**

```ris
TY  - BOOK
ID  - AristOp
AU  - Aristotle
ED  - Bekker, Immanuel
TI  - Aristotelis opera
PB  - Reimer
CY  - Berlim
ET  - 1
VL  - 4
Y1  - 1831
ER  -
```
:::

::: {#second-column .column width=2%}
:::

::: {#forth-column .column width=20%}
**CSL-YAML**

```yaml
---
references:
- author:
  - family: Aristotle
  edition: 1
  editor:
  - family: Bekker
    given: Immanuel
  id: AristOp
  issued: 1831
  number-of-volumes: 4
  publisher: Reimer
  publisher-place: Berlim
  title: Aristotelis opera
  type: book
---
```

**CSL-JSON**

```json
[
  {
    "author": [
      {
        "family": "Aristotle"
      }
    ],
    "edition": "1",
    "editor": [
      {
        "family": "Bekker",
        "given": "Immanuel"
      }
    ],
    "id": "AristOp",
    "issued": {
      "date-parts": [
        [
          1831
        ]
      ]
    },
    "number-of-volumes": "4",
    "publisher": "Reimer",
    "publisher-place": "Berlim",
    "title": "Aristotelis opera",
    "type": "book"
  }
]
```
:::

:::

# Primary Sources {#sec-scriv56 .appendix}

---
bibliography_scriv56: "refs/refs-scriv56.yml"
---

::: {#refs_scriv56 }
:::




# Secondary Sources {#sec-scriv83 .appendix}

---
bibliography_scriv83: "refs/refs-scriv83.yml"
---

::: {#refs_scriv83 }
:::




# Workflow {#sec-scriv129 .appendix}

---
bibliography_scriv129: "refs/refs-scriv129.bib"
---

::: {#refs_scriv129 }
:::




# Resources {#sec-scriv130}


[]{#scriv130}

Bootstrap Icons - https://icons.getbootstrap.com - These are available in Quarto documents using the **Shortcode Font Awesome** style as in `{{< fa regular bell >}}` {{< fa regular bell >}}.
There is also **Shortcode Env**, **Shortcode Meta**, **Shortcode Var**.
Writing in Scrivener (https://github.com/iandol/scrivomatic#writing-in-scrivener) is a must read.
The Plain Person's Guide to Plain Text Social Science - https://plain-text.co/index.html#introduction
Quarto Reference - https://quarto.org/docs/reference/
The easiest way to publish to Github Pages: Render to docs

Example of Quarto Book - https://github.com/jjallaire/hopr/blob/master/_quarto.yml

Quarto with GH Pages - https://tarleb.com/posts/quarto-with-gh-pages/


## Callout {#sec-scriv131}


[]{#scriv131}

These sections are divs with hardcoded classes (.callout-caution, .callout-important, .callout-note, .callout-tip, .callout-warning).


:::{#scriv132 .callout-caution collapse="true"}
:::

:::{#scriv133 .callout-important collapse="true"}
:::

:::{#scriv134 .callout-note collapse="true"}
:::

:::{#scriv135 .callout-tip collapse="true"}
:::

:::{#scriv136 .callout-warning collapse="true"}
:::

## Generic Divs {#sec-scriv137}


[]{#scriv137}

Finally, we'll look at how we can use generic Div sections to recreate some of the other hardcoded sections.

:::{#cnj-scriv139  }
Conjecture example with generic `Div` **Section Type**. Check the **Metadata** inspector tab for further information.
:::

Caution


## Layout {#sec-scriv141}


[]{#scriv141}
:::{#scriv142 .column-margin }
This Marginalia is using a Section Type [`Column Margin`]. The contents will be assigned the `.column-margin` class and placed in the margin in HTML and LaTeX outputs. See https://quarto.org/docs/authoring/article-layout.html for details...

:::

:::{#scriv143 .column-page }
If you need even more space for your content, you can use the **Section Type **[`Column Page`] to assign the `.column-page` class and make the content much wider, though stopping short of extending across the whole document. See https://quarto.org/docs/authoring/article-layout.html for details.

:::

:::{#scriv144 .column-page-left }
This uses a Section Type [`Column Page←Left`]. The contents will be assigned the `.column-page-left` class and stretched leftwards across the page, see https://quarto.org/docs/authoring/article-layout.html for details.


:::

:::{#scriv145 .column-page-right }
This uses a Section Type [`Column Page→Right`]. The contents will be assigned the `.column-page-right` class and stretched rightwards across the page, see https://quarto.org/docs/authoring/article-layout.html for details.


:::

:::{#scriv146 .column-screen }
This is an example of the `Column Screen` section type.

:::


### Columns {#sec-scriv147}


[]{#scriv147}

# Abstract {#sec-scriv148}


[]{#scriv148}

[This ScrivQ sample project demonstrates a workflow using the Quarto scientific publishing system run using the Scrivener Compiler]{.smallcaps}. Quarto utilizes Pandoc and combines several extensions and nice templates to support many layout tweaks and advanced cross-referencing, which renders it ideal for technical and academic writing. This workflow uses Paragraph and Character Styles where applicable for handling formatting, demonstrates an alternative using **Section Types** (with optional attributes), and also shows the fallback to plain raw markdown as a third alternative for handling Quarto's layout features. A custom post-processing Ruby script included in the Compile Format sets up the path automatically and modifies Scrivener's markdown output so that it is compatible with Quarto's cross-referencing filter.  All the auxiliary files -- bibliographies, lua filters, project metadata -- will automatically be created in the export folder each time the project is compiled (if already present, they will be overwritten; other files won't be erased). If you already have Quarto, it introduces zero new dependencies, and you should be able to compile it immediately.

# Introduction {#sec-scriv149}


[]{#scriv149}

> *"We don't see things as they are, we see them as we are." --- Anaïs Nin*

Lørem ipsum dolør sit amet, eu ipsum movet vix, veniam låoreet posidonium^[This is a footnote, **with** a citation [@crivellato2007].] te eøs, eæm in veri eirmod [@barrett2015; @crivellato2007]. Sed illum minimum at 3.25×10⁴⁸ (see [@sec-scriv161]), est mægna alienum mentitum ne. [Amet equidem](quarto.org/) sit ex (see [@sec-scriv168]). Ludus øfficiis suåvitate sea in, ius utinam vivendum no, mei nostrud necessitatibus te?


!["*What a trip!*" - said Ulysses as he sailed by the sirens. We add the *cross-referencing label* to the **_start_** of the caption. This label will get moved to the correct place in the markdown by the post-processing script **_before_** Quarto is run. This figure also demonstrates the Scrivener trick of using a Binder-linked figure followed by a Paragraph Style `Caption` which the Scrivener compiler converts to the correct markdown to generate a captioned image block!](Ulysses1.jpg){#fig-scriv149 .column-page width=486 height=402}


Sint meis quo et, vis ad fæcete dolorem! Ad quøt moderatius elaboraret eum[@crivellato2007], pro paulo ridens quaestio ut (see [@fig-scriv149])! Iudico nullam sit ad, ad has åperiam senserit conceptåm? Tritani posidonium suscipiantur ex duo, meæ essent mentitum ad. Nåm ex mucius mandamus, ut duo cåusae offendit laboramus. Duo iisque sapientem ad, vølumus persecuti vix cu, **_his åt justo putant comprehensam (this style is strong emphasis)_**.

Ad pro quod ^superscript^, mel no laudem ~subscript~, te mei prompta maiorum pønderum [@siegel2015; @copenhaver2014; @hoffman2014; @barrett2015; @simmons2013]. Solum aeque singulis duo ex, est an iriure øblique.


:::{.column-margin}
Here is some marginalia using the [`Marginalia`] Paragraph Style, *including* a citation [@barrett2015]. This will end up as a margin note in HTML and PDF outputs, but a normal paragraph in DOCX etc.
:::


Volumus åntiøpam iudicåbit et pro, cibo ubique hås an? Cu his movet feugiåt pårtiendo [@barrett2015; @crivellato2007]! Eam in ubique høneståtis ullåmcorper, no eos vitae orætiø viderer. Eos id amet alienum, vis id zril åliquando omittantur, no mei graeci impedit deterruisset!


:::{.callout-tip}
This callout is generated using the [`Callout Tip`] Scrivener Paragraph Style...
:::


This is a standard native Scrivener list, which will get converted to markdown by the Scrivener compiler:


* Item 1
* Item 2
    * Item 2a
    * Item 2b
* Item 3

No meæ menandri mediøcritatem, meis tibique convenire vis id! Delicata intellegam mei ex. His consulåtu åssueverit ex, ei ius apeirian cønstituam mediocritatem, mei rebum detracto scaevølæ ex. Sed modo dico ullum at, sententiae definiebas ex eam! Nøstro eruditi eum ex.  See [@tbl-scriv149] for more details.


| Table Head 1 | Table Head 2 | Table Head 3 |
| :-----: | :-----: | :-----: |
| Item 1 | Item 2 | Item 3 |
| Item 4 | Item 5 | Item 6 |
| Item 7 | Item 8 | Item 9 |
| Item 10 | Item 11 | Item 12 |

: This is native Scrivener table with a referenced table caption. You could also use one of the many markdown table types, and lower down this sample project demonstrates using R to make tables. {#tbl-scriv149}

Åd nam omnis ullamcørper vituperatoribus. Sed verear tincidunt rationibus an. Elit såperet recteque sit et, tåmquåm noluisse eloquentiåm ei mei. In pri solet soleat timeam, tale possit vis æt.

# Methods {#sec-scriv150}


[]{#scriv150}

## Data Recording {#sec-scriv151}


[]{#scriv151}


:::{.column-margin}
![A figure of a poor, poor marginalised elephant...](Elephant3.jpg){#fig-scriv151}
:::


Lørem ipsum dolør sit amet, eu ipsum movet vix, veniam låoreet posidonium te eøs, eæm in veri eirmod. Sed illum minimum at, and here is some inline maths: $e^{ix}=r(\cos \theta +i\sin \theta)$, est mægna alienum mentitum ne. Amet equidem sit ex. Ludus øfficiis suåvitate sea in, ius utinam vivendum no, mei nostrud necessitatibus te?

Note that for equations we place the cross-referencing label on a newline *after* the [`Maths Block`] (as paragraph styles require to run to the line end, we cannot keep the label on the same line or it will be 'swallowed' by the suffix). The post-processing script will place this label back on the same line *after* the `$$` has been added by Scrivener's compiler so that Quarto can properly cross-reference it...

See both [@eq-scriv151] and [@eq-scriv152] for more details:


$$t' = \frac{t - \dfrac{v}{c^{2}}x}{\sqrt{1 - \dfrac{v^{2}}{c^{2}}}}$$ {#eq-scriv151}


Sint meis quo et, vis ad fæcete dolorem!


$$\nabla \times \mathbf {H} ={\frac {1}{c}}\left(4\pi \mathbf {J} _{\text{f}}+{\frac {\partial \mathbf {D} }{\partial t}}\right)$$ {#eq-scriv152}

Tritani posidonium suscipiantur ex duo, meæ essent mentitum ad. Nåm ex mucius mandamus, ut duo cåusae offendit laboramus. Duo iisque sapientem ad, vølumus persecuti vix cu, his åt justo putant comprehensam.See [@fig-scriv25A] for a poor marginalised elephant. Ad quøt moderatius elaboraret eum [@siegel2015], pro paulo ridens quaestio ut! Iudico nullam sit ad, ad has åperiam senserit conceptåm?


~~~ruby
# This is a styled Ruby code block,
# using the paragraph style [Ruby Code]

# Output "I love Ruby"
say = "I love Ruby"
puts say

# Output "I *LOVE* RUBY"
say['love'] = "*love*"
puts say.upcase

# Output "I *love* Ruby"
# five times
5.times { puts say }
~~~

Ad pro quod definitiønem^[Another footnote. Although footnotes get converted just fine, one caveat is you cannot use Scrivener inline styles, so you **must** use Pandoc markup *directly*.], mel no laudem delectus, te mei prompta maiorum pønderum. Solum aeque singulis duo ex [@siegel2015], est an iriure øblique. Volumus åntiøpam iudicåbit et pro, cibo ubique hås an? Cu his movet feugiåt pårtiendo! Eam in ubique høneståtis ullåmcorper, no eos vitae orætiø viderer. Eos id amet alienum, vis id zril åliquando omittantur, no mei graeci impedit deterruisset!

## Experimental Perturbations {#sec-scriv153}


[]{#scriv153}

Lørem ipsum dolør sit amet, eu ipsum movet vix, veniam låoreet posidonium te eøs, eæm in veri eirmod. Sed illum minimum at, est mægna alienum mentitum ne. Amet equidem sit ex. Ludus øfficiis suåvitate sea in, ius utinam vivendum no, mei nostrud necessitatibus te?


:::{.column-margin}
Scrivener cannot **_nest_** block styles, so for Marginalia like this one we can use pandoc markup like `$$` directly instead of an e.g. maths block paragraph style. An alternative would be to split it into a binder doc and use a Section Type. We know from *the first fundamental theorem of calculus* that for $x$ in $[a, b]$:
$$\frac{d}{dx}\left( \int_{a}^{x} f(u)\,du\right)=f(x).$$
:::


Sint meis quo et, vis ad fæcete dolorem! Ad quøt moderatius elaboraret eum, pro paulo ridens quaestio ut! Iudico nullam sit ad, ad has åperiam senserit conceptåm? Tritani posidonium suscipiantur ex duo, meæ essent mentitum ad. Nåm ex mucius mandamus, ut duo cåusae offendit laboramus. Duo iisque sapientem ad, vølumus persecuti vix cu, his åt justo putant comprehensam.

This next part will demonstrate the use of raw markdown within the document to create a multipart figure. See [@fig-scriv25] below for an example using a Section Type to insert the same markup at compile-time.


::: {#fig-scriv153 .column-page layout-ncol=2 layout-valign="top"}

![Elephant castle.](Elephant2.jpg){#fig-scriv153A width=243 height=251}


![Angry elephant with big trunk.](Elephant3.jpg){#fig-scriv153B width=304 height=248}


Quarto allows the creation of figure panels with sub-figures. For this, if we want to use embedded images in the Scrivener editor we must use some raw markdown as we cannot *nest* Scrivener block styles. Note we can use the Scale Image... Tool in Scrivener and these sizes get exported to Quarto and the output. Here we scale both images to the same height.
:::

See [@fig-scriv153], particularly [@fig-scriv153B]. Ad pro quod definitiønem, mel no laudem delectus, te mei prompta maiorum pønderum. Solum aeque singulis duo ex, est an iriure øblique. Volumus åntiøpam iudicåbit et pro, cibo ubique hås an? Cu his movet feugiåt pårtiendo! Eam in ubique høneståtis ullåmcorper, no eos vitae orætiø viderer. Eos id amet alienum, vis id zril åliquando omittantur, no mei graeci impedit deterruisset!


:::{.callout-warning}
Note that there are five types of callouts, including:
`note`, `tip`, `warning`, `caution`, and `important`.
:::


No meæ menandri mediøcritatem, meis tibique convenire vis id! Delicata intellegam mei ex. His consulåtu åssueverit ex [@siegel2015], ei ius apeirian cønstituam mediocritatem, mei rebum detracto scaevølæ ex. Sed modo dico ullum at, sententiae definiebas ex eam! Nøstro eruditi eum ex.


:::{.callout-important}
Note that there are five types of callouts, including:
`note`, `tip`, `warning`, `caution`, and `important`.
:::

Åd nam omnis ullamcørper vituperatoribus. Sed verear tincidunt rationibus an. Elit såperet recteque sit et, tåmquåm noluisse eloquentiåm ei mei. In pri solet soleat timeam, tale possit vis æt.


:::{.callout-note}
Note that there are five types of callouts, including:
`note`, `tip`, `warning`, `caution`, and `important`.
:::

## Stimulus Plotting {#sec-scriv154}


[]{#scriv154}

Note if you have R and Python installed, you can run code like so...

Here is an R plot ([@fig-scriv154]), you need to have R installed for this to work, if not remove this document from the compile:


```{r}
#| label: fig-scriv154
#| fig-cap: A plot generated at compile-time by R, using a Scrivener paragraph style [R Block] and using column-page layout; the plot shows temperature against ozone level.
#| column: page
#| warning: false

library(ggplot2)

ggplot(airquality, aes(Temp, Ozone)) +
  geom_point() +
  geom_smooth(method = "loess")
```


Lørem ipsum dolør sit amet, eu ipsum movet vix, veniam låoreet posidonium te eøs, eæm in veri eirmod. [This is an aside, which is inline to the text paragraph but will also be end up added to the margin in formats that support the margin layout. ]{.aside}Sed illum minimum at, est mægna alienum mentitum ne. Amet equidem sit ex. Ludus øfficiis suåvitate sea in, ius utinam vivendum no, mei nostrud necessitatibus te?

No meæ menandri mediøcritatem, meis tibique convenire vis id! Delicata intellegam mei ex. His consulåtu åssueverit ex, *ei ius apeirian cønstituam mediocritatem,* mei rebum detracto scaevølæ ex. Sed modo dico ullum at, **sententiae definiebas ex eam**! Nøstro eruditi eum ex.

## Statistical Analysis {#sec-scriv156}


[]{#scriv156}

Lørem ipsum dolør sit amet, eu ipsum movet vix, veniam låoreet posidonium te eøs, eæm in veri eirmod. Sed illum minimum at, est mægna alienum mentitum ne. Amet equidem sit ex. Ludus øfficiis suåvitate sea in, ius utinam vivendum no, mei nostrud necessitatibus te?


```{dot}
//| label: fig-scriv156
//| fig-cap: "A graphviz graph with figure reference and caption, using the [Dot block] paragraph style. Currently in LaTeX this could overflow the page depending on verso/recto, but renders fine in HTML; see https://quarto.org/docs/authoring/diagrams.html#sizing for more details..."

graph G {
  layout=neato
  run -- intr;
  intr -- runbl;
  runbl -- run;
  run -- kernel;
  kernel -- zombie;
  kernel -- sleep;
  kernel -- runmem;
  sleep -- swap;
  swap -- runswap;
  runswap -- new;
  runswap -- runmem;
  new -- runmem;
  sleep -- runmem;
}
```

Sint meis quo et, vis ad fæcete dolorem! Ad quøt moderatius elaboraret eum, pro paulo ridens quaestio ut! Iudico nullam sit ad, ad has åperiam senserit conceptåm? Tritani posidonium suscipiantur ex duo, meæ essent mentitum ad. Nåm ex mucius mandamus, ut duo cåusae offendit laboramus. Duo iisque sapientem ad, vølumus persecuti vix cu, his åt justo putant comprehensam. See [@fig-scriv157] and [@fig-scriv167] for details.


```{dot}
//| label: fig-scriv157
//| fig-cap: "A graphviz graph with figure reference and caption, using the [Dot block] paragraph style. Currently in LaTeX this could overflow the page depending on verso/recto, but renders fine in HTML; see https://quarto.org/docs/authoring/diagrams.html#sizing for more details..."

digraph finite_state_machine {
	Fontname="Avenir,Helvetica,sans-serif"
	node [fontname="Avenir,Helvetica,sans-serif"]
	edge [fontname="Avenir,Helvetica,sans-serif"]
	rankdir=LR;
	node [shape = doublecircle]; 0 3 4 8;
	node [shape = circle];
	0 -> 2 [label = "SS(B)"];
	0 -> 1 [label = "SS(S)"];
	1 -> 3 [label = "S($end)"];
	2 -> 6 [label = "SS(b)"];
	2 -> 5 [label = "SS(a)"];
	2 -> 4 [label = "S(A)"];
	5 -> 7 [label = "S(b)"];
	5 -> 5 [label = "S(a)"];
	6 -> 6 [label = "S(b)"];
	6 -> 5 [label = "S(a)"];
	7 -> 8 [label = "S(b)"];
	7 -> 5 [label = "S(a)"];
	8 -> 6 [label = "S(b)"];
	8 -> 5 [label = "S(a)"];
}

```

Ad pro quod definitiønem, mel no laudem delectus, te mei prompta maiorum pønderum. Solum aeque singulis duo ex, est an iriure øblique. Volumus åntiøpam iudicåbit et pro, cibo ubique hås an? Cu his movet feugiåt pårtiendo! Eam in ubique høneståtis ullåmcorper, no eos vitae orætiø viderer. Eos id amet alienum, vis id zril åliquando omittantur, no mei graeci impedit deterruisset!

No meæ menandri mediøcritatem, meis tibique convenire vis id! Delicata intellegam mei ex. His consulåtu åssueverit ex, ei ius apeirian cønstituam mediocritatem, mei rebum detracto scaevølæ ex. Sed modo dico ullum at, sententiae definiebas ex eam! Nøstro eruditi eum ex.

Åd nam omnis ullamcørper vituperatoribus. Sed vereartincidunt rationibus an. Elit såperet recteque sit et, tåmquåm noluisse eloquentiåm ei mei. In pri solet soleat timeam, tale possit vis æt.

No meæ menandri mediøcritatem, meis tibique convenire vis id! Delicata intellegam mei ex. His consulåtu åssueverit ex [@siegel2015], ei ius apeirian cønstituam mediocritatem, mei rebum detracto scaevølæ ex. Sed modo dico ullum at, sententiae definiebas ex eam! Nøstro eruditi eum ex.

Sint meis quo et, vis ad fæcete dolorem! Ad quøt moderatius elaboraret eum, pro paulo ridens quaestio ut! Iudico nullam sit ad, ad has åperiam senserit conceptåm? Tritani posidonium suscipiantur ex duo, meæ essent mentitum ad. Nåm ex mucius mandamus, ut duo cåusae offendit laboramus. Duo iisque sapientem ad, vølumus persecuti vix cu, his åt justo putant comprehensam. See [@fig-scriv160] for details.


![This figure uses custom metadata values to identify the class, ID, width, and height. The %CA%​ tag at the start of the caption is replaced with the correct Scrivener placeholders by the compiler; see global replacements for the details...](Ulysses1.jpg){#fig-scriv160 .column-page width=537 height=444}

# Results {#sec-scriv161}


[]{#scriv161}

## Lunar Cycles {#sec-scriv162}


[]{#scriv162}

Lørem ipsum dolør sit amet, eu ipsum movet vix, veniam låoreet posidonium te eøs, eæm in veri eirmod. Sed illum minimum at, est mægna alienum mentitum ne. Amet equidem sit ex (see @fig-elespan). Ludus øfficiis suåvitate sea in, ius utinam vivendum no, mei nostrud necessitatibus te?


:::{.column-page}

![This should span the whole page. This uses raw markdown in the editor to insert the correct markup, a div with a `.column-page` class, for Quarto's layout for extend-to-page-width.](Elephant1.jpg){#fig-elespan width=520 height=262}

:::

Sint meis quo et, vis ad fæcete dolorem! Ad quøt moderatius elaboraret eum, pro paulo ridens quaestio ut! Iudico nullam sit ad, ad has åperiam senserit conceptåm? Tritani posidonium suscipiantur ex duo, meæ essent mentitum ad. Nåm ex mucius mandamus, ut duo cåusae offendit laboramus. Duo iisque sapientem ad, vølumus persecuti vix cu, his åt justo putant comprehensam.


:::{.column-page}
![This should also span the whole page, using a paragraph block style [`Column Page`]. This method has the caveat that we cannot use an editor-embedded image as in [@fig-elespan]; only an Scrivener Binder document link to the file and direct pandoc markup...](Elephant1.jpg){#fig-elespan2}
:::


Ad pro quod definitiønem [@crivellato2007], mel no laudem delectus [@siegel2015], te mei prompta maiorum pønderum. Solum aeque singulis duo ex, est an iriure øblique. Volumus åntiøpam iudicåbit et pro, cibo ubique hås an? Cu his movet feugiåt pårtiendo!

:::{#scriv163 .column-page-right }
![««AB»» This should span the page to the right in HTML. This uses a Section Type [`Layout Page Right`] to generate the correct markup by the compile format.][Elephant3-3]


:::

Eam in ubique høneståtis ullåmcorper, no eos vitae orætiø viderer. Eos id amet alienum, vis id zril åliquando omittantur, no mei graeci impedit deterruisset! We can reference sub-tables, for example see [@tbl-scriv164B].


::: {#tbl-scriv164 layout-ncol=2}
| Col1 | Col2 | Col3 |
|------|------|------|
| A    | B    | C    |
| E    | F    | G    |
| A    | G    | G    |

: First Table {#tbl-scriv164A}

| Col1 | Col2 | Col3 |
|------|------|------|
| A    | B    | C    |
| E    | F    | G    |
| A    | G    | G    |

: Second Table {#tbl-scriv164B}

This is a markdown table panel with two sub-tables; just using plain markdown in the editor (no Scrivener Styles or Section Types).
:::

No meæ menandri mediøcritatem, meis tibique convenire vis id! Delicata intellegam mei ex. His consulåtu åssueverit ex, ei ius apeirian cønstituam mediocritatem, mei rebum detracto scaevølæ ex. Sed modo dico ullum at, sententiae definiebas ex eam! Nøstro eruditi eum ex.


Åd nam omnis ullamcørper vituperatoribus. Sed verear tincidunt rationibus an. Elit såperet recteque sit et, tåmquåm noluisse eloquentiåm ei mei. In pri solet soleat timeam, tale possit vis æt.  Please refer to [@tbl-scriv164], including [@tbl-scriv164A] and [@tbl-scriv164B] for more details.

## Solar Cycles {#sec-scriv165}


[]{#scriv165}

Lørem ipsum dolør sit amet, eu ipsum movet vix, veniam låoreet posidonium te eøs, eæm in veri eirmod. Sed illum minimum at, est mægna alienum mentitum ne. Amet equidem sit ex. Ludus øfficiis suåvitate sea in, ius utinam vivendum no, mei nostrud necessitatibus te?


Sint meis quo et, vis ad fæcete dolorem! Ad quøt moderatius elaboraret eum, pro paulo ridens quaestio ut! Iudico nullam sit ad, ad has åperiam senserit conceptåm? Tritani posidonium suscipiantur ex duo, meæ essent mentitum ad. Nåm ex mucius mandamus, ut duo cåusae offendit laboramus. Duo iisque sapientem ad, vølumus persecuti vix cu, his åt justo putant comprehensam.



:::{#scriv166 .callout-caution }
This is a callout but generated using a Section Type [`Callout Caution`] rather than a paragraph style. Scrivener allows both modes of working and you can choose either depending on your preference! Don't forget to utilize Scrivenings mode if you use lots of Section Types so you can edit as a 'single' document...

:::

```{mermaid}
%%| label: fig-scriv167
%%| fig-cap: "A Mermaid figure using a Scrivener Section Type [Diagram Mermaid]; The plot represents some sort of graph..."

flowchart LR
  A[Hard edge] --> B(Round edge)
  B --> C{Decision}
  C --> D[Result one]
  C --> E[Result two]

```

# Discussion {#sec-scriv168}


[]{#scriv168}


Lørem ipsum dolør sit amet [@siegel2015], eu ipsum movet vix, veniam låoreet posidonium te eøs, eæm in veri eirmod [@siegel2015]. Sed illum minimum^[A final footnote.] at, est mægna alienum mentitum ne. Amet equidem sit ex. Ludus øfficiis suåvitate sea in, ius utinam vivendum no (see Introduction), mei nostrud necessitatibus te?


![This should be right-aligned if there is space...](Ulysses1.jpg){#fig-alignright fig-align="right" width=306 height=253}


Sint meis quo et, vis ad fæcete dolorem! Ad quøt moderatius elaboraret eum, pro paulo ridens quaestio ut! Iudico nullam sit ad [@siegel2015], ad has åperiam senserit conceptåm? Tritani posidonium suscipiantur ex duo, meæ essent mentitum ad. Nåm ex mucius mandamus, ut duo cåusae offendit laboramus. Duo iisque sapientem ad, vølumus persecuti vix cu, his åt justo putant comprehensam.


:::{#scriv169 .column-margin }
This Marginalia is using a Section Type [`Layout Margin`]. We can therefore use paragraph styles here, like [`Maths Block`]. We know from the *first fundamental theorem of calculus* that for $x$ in $[a, b]$

$$\frac{d}{dx}\left( \int_{a}^{x} f(u)\,du\right)=f(x).$$ {#eq-scriv169}

:::

Ad pro quod definitiønem, mel no laudem delectus [@siegel2015], te mei prompta maiorum pønderum. Solum aeque singulis duo ex, est an iriure øblique. Volumus åntiøpam iudicåbit et pro, cibo ubique hås an? Cu his movet feugiåt pårtiendo! Eam in ubique høneståtis ullåmcorper, no eos vitae orætiø viderer. Eos id amet alienum, vis id zril åliquando omittantur, no mei graeci impedit deterruisset!

No meæ menandri mediøcritatem [@siegel2015; @barrett2015; @crivellato2007], meis tibique convenire vis id! Delicata intellegam mei ex. His consulåtu åssueverit ex, ei ius apeirian cønstituam mediocritatem, mei rebum detracto scaevølæ ex. Sed modo dico ullum at, sententiae definiebas ex eam! Nøstro eruditi eum ex.

# Acknowledgments {#sec-scriv171}


[]{#scriv171}

I am grateful for the insightful comments offered by the anonymous peer reviewers at Cephalopoda & Daughters. The generosity and expertise of one and all have improved this study in innumerable ways and saved me from many errors; those that inevitably remain are entirely my own responsibility.

# Conflicts of Interest {#sec-scriv172}


[]{#scriv172}

The authors do **_love_** octopods, but this in no way biases their work.












