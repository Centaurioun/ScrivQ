<?xml version="1.0" encoding="UTF-8"?>
<SnapshotIndexes Version="1.0" BinderUUID="E8956215-97C1-41DA-8AB9-50C2891EA656">
    <Snapshot Date="2023-06-18 22:49:37 -0300">
        <Title>Untitled (Save)</Title>
        <Text>Introduction

Writing involves using the Scrivener Binder to determine document structure. You can use this Project as a template, delete all the sub-documents in Manuscript and start creating your own, using the Binder hierarchy to define your core structure. Add pictures and research etc. to Research. You can edit the project Metadata to modify the Quarto &amp; Pandoc options. You can use Scrivener Styles and Section Layouts to structure the semantic bits that will generate markup added at compile time. You can use Scrivener’s other native tools (lists, tables, links), and [mostly] should not need to add any markdown in the editor itself. Most Quarto features work without any modification.

Writing Using Styles

For Scrivener Styles, apply the Paragraph or Character style for each feature:
￼
For Scrivener Styles, here are some example Quarto features. As is general practice for most markdown flavours, use empty lines around Paragraph Styles, for example callouts:

Note that there are five types of callouts, including: 
`note`, `tip`, `warning`, `caution`, and `important`.

The Scrivener Styles are converted into the correctly styled div by the compiler. Here is an example marginalia block:

This will appear in the margin.

Diagram blocks for Mermaid and GraphViz are included, e.g. GraphViz (aka dot):

digraph D {

  A -&gt; {B, C, D} -&gt; {F}

}

Remember the way these Styles look in the editor is not translated to the markdown, they are used for semantic identification only. This means you can style in-editor text any way you want (fonts, colours etc).
Writing Using Section Layouts

If you want to use Section Types, use the document templates in the Project &gt; New from Template menu to create a new document of that type:

￼

For an existing document, apply the Section Type using the Inspector Metadata Section Type menu. In cases where there are Paragraph Styles, Section Types enable you to wrap these blocks together (i.e. you can use a Maths Block Style inside a Marginalia Section Type). Another benefit of Section Types are the ability to inject custom attributes using metadata. See the Inspector’s Custom Metadata→ ID, Class &amp; Attributes in the multi-part image template below for an example.

￼

Here you can see we add a cross-referencing label ID #fig-multipart, a layout class .column-page and layout attributes layout-ncol=2 layout-valign="bottom". These will be added to the markup that the compiler will add to the prefix of this section.

                                                                                                    

Cross Referencing Details:

To support Quarto’s cross-referencing system (using {#item-...} labels at the end of the line), Scrivener’s pandoc-flavoured markdown output needs to be modified before Quarto can run. So, when writing in Scrivener we add the cross-referencing labels at the start of the caption; lets say we have an embedded image block:


￼

{#fig-one} Here is a caption

As Quarto expects {#labels} at the end of the image markup, the post-processing script will move {#fig-one} from the caption down to the reference link that identifies the image (Scrivener uses ![Caption][link] when converting editor images to markdown). 

For equations we should write the {#label} on the first line after the [Maths Block] style:

\nabla \times \mathbf {E} =-{\frac {\partial \mathbf {B} }{\partial t}}
{#eq-maxwell}

The script edits the compiled markdown so the {#eq-label} is placed on the same line after the $$ have been added by the compiler.
</Text>
    </Snapshot>
</SnapshotIndexes>